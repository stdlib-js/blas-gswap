{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isndarrayLike = require( '@stdlib/assert-is-ndarray-like' );\nvar isCollection = require( '@stdlib/assert-is-collection' );\nvar isFloat64Array = require( '@stdlib/assert-is-float64array' );\nvar isFloat32Array = require( '@stdlib/assert-is-float32array' );\nvar format = require( '@stdlib/string-format' );\nvar dswap = require( '@stdlib/blas-base-dswap' ).ndarray;\nvar sswap = require( '@stdlib/blas-base-sswap' ).ndarray;\nvar swap = require( '@stdlib/blas-base-gswap' ).ndarray;\n\n\n// MAIN //\n\n/**\n* Interchanges two vectors.\n*\n* ## Notes\n*\n* -   In general, for best performance, especially for large vectors, provide 1-dimensional `ndarrays` whose underlying data type is either `float64` or `float32`.\n*\n* @param {(Collection|VectorLike)} x - first input array\n* @param {(Collection|VectorLike)} y - second input array\n* @throws {TypeError} first argument must be either an array-like object or a 1-dimensional ndarray\n* @throws {TypeError} second argument must be either an array-like object or a 1-dimensional ndarray\n* @throws {RangeError} input arrays must be the same length\n* @returns {(Collection|VectorLike)} `y`\n*\n* @example\n* var x = [ 4.0, 2.0, -3.0, 5.0, -1.0 ];\n* var y = [ 2.0, 6.0, -1.0, -4.0, 8.0 ];\n*\n* gswap( x, y );\n* // x => [ 2.0, 6.0, -1.0, -4.0, 8.0 ]\n* // y => [ 4.0, 2.0, -3.0, 5.0, -1.0 ]\n*/\nfunction gswap( x, y ) {\n\tvar isxf64;\n\tvar isxf32;\n\tvar isyf64;\n\tvar isyf32;\n\tvar isxa;\n\tvar isxv;\n\tvar isya;\n\tvar isyv;\n\n\tisxa = isndarrayLike( x );\n\tisya = isndarrayLike( y );\n\tisxv = isxa && x.ndims === 1 && x.strides.length === 1; // is ndarray-like vector?\n\tisyv = isya && y.ndims === 1 && y.strides.length === 1; // is ndarray-like vector?\n\tif ( isxv ) {\n\t\tisxf64 = isFloat64Array( x.data );\n\t\tisxf32 = ( isxf64 ) ? false : isFloat32Array( x.data );\n\t} else if ( isxa === false && isCollection( x ) ) {\n\t\tisxf64 = isFloat64Array( x );\n\t\tisxf32 = ( isxf64 ) ? false : isFloat32Array( x );\n\t} else {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be either an array-like object or a one-dimensional ndarray. Value: `%s`.', x ) );\n\t}\n\tif ( isyv ) {\n\t\tisyf64 = isFloat64Array( y.data );\n\t\tisyf32 = ( isyf64 ) ? false : isFloat32Array( y.data );\n\t} else if ( isya === false && isCollection( y ) ) {\n\t\tisyf64 = isFloat64Array( y );\n\t\tisyf32 = ( isyf64 ) ? false : isFloat32Array( y );\n\t} else {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be either an array-like object or a one-dimensional ndarray. Value: `%s`.', y ) );\n\t}\n\tif ( x.length !== y.length ) {\n\t\tthrow new RangeError( format( 'invalid argument. Arrays must be the same length. First argument length: `%u`. Second argument length: `%u`.', x.length, y.length ) );\n\t}\n\tif ( isxv && isyv ) {\n\t\tif ( isxf64 && isyf64 ) {\n\t\t\tdswap( x.length, x.data, x.strides[ 0 ], x.offset, y.data, y.strides[ 0 ], y.offset ); // eslint-disable-line max-len\n\t\t\treturn y;\n\t\t}\n\t\tif ( isxf32 && isyf32 ) {\n\t\t\tsswap( x.length, x.data, x.strides[ 0 ], x.offset, y.data, y.strides[ 0 ], y.offset ); // eslint-disable-line max-len\n\t\t\treturn y;\n\t\t}\n\t\tswap( x.length, x.data, x.strides[ 0 ], x.offset, y.data, y.strides[ 0 ], y.offset ); // eslint-disable-line max-len\n\t\treturn y;\n\t}\n\tif ( isxv ) {\n\t\tswap( x.length, x.data, x.strides[ 0 ], x.offset, y, 1, 0 );\n\t\treturn y;\n\t}\n\tif ( isyv ) {\n\t\tswap( x.length, x, 1, 0, y.data, y.strides[ 0 ], y.offset );\n\t\treturn y;\n\t}\n\tswap( x.length, x, 1, 0, y, 1, 0 );\n\treturn y;\n}\n\n\n// EXPORTS //\n\nmodule.exports = gswap;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* BLAS level 1 routine to interchange two vectors.\n*\n* @module @stdlib/blas-gswap\n*\n* @example\n* var gswap = require( '@stdlib/blas-gswap' );\n*\n* var x = [ 4.0, 2.0, -3.0, 5.0, -1.0 ];\n* var y = [ 2.0, 6.0, -1.0, -4.0, 8.0 ];\n*\n* gswap( x, y );\n* // x => [ 2.0, 6.0, -1.0, -4.0, 8.0 ]\n* // y => [ 4.0, 2.0, -3.0, 5.0, -1.0 ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAgB,QAAS,gCAAiC,EAC1DC,EAAe,QAAS,8BAA+B,EACvDC,EAAiB,QAAS,gCAAiC,EAC3DC,EAAiB,QAAS,gCAAiC,EAC3DC,EAAS,QAAS,uBAAwB,EAC1CC,EAAQ,QAAS,yBAA0B,EAAE,QAC7CC,EAAQ,QAAS,yBAA0B,EAAE,QAC7CC,EAAO,QAAS,yBAA0B,EAAE,QA2BhD,SAASC,EAAOC,EAAGC,EAAI,CACtB,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAMJ,GAJAH,EAAOf,EAAeS,CAAE,EACxBQ,EAAOjB,EAAeU,CAAE,EACxBM,EAAOD,GAAQN,EAAE,QAAU,GAAKA,EAAE,QAAQ,SAAW,EACrDS,EAAOD,GAAQP,EAAE,QAAU,GAAKA,EAAE,QAAQ,SAAW,EAChDM,EACJL,EAAST,EAAgBO,EAAE,IAAK,EAChCG,EAAWD,EAAW,GAAQR,EAAgBM,EAAE,IAAK,UAC1CM,IAAS,IAASd,EAAcQ,CAAE,EAC7CE,EAAST,EAAgBO,CAAE,EAC3BG,EAAWD,EAAW,GAAQR,EAAgBM,CAAE,MAEhD,OAAM,IAAI,UAAWL,EAAQ,kHAAmHK,CAAE,CAAE,EAErJ,GAAKS,EACJL,EAASX,EAAgBQ,EAAE,IAAK,EAChCI,EAAWD,EAAW,GAAQV,EAAgBO,EAAE,IAAK,UAC1CO,IAAS,IAAShB,EAAcS,CAAE,EAC7CG,EAASX,EAAgBQ,CAAE,EAC3BI,EAAWD,EAAW,GAAQV,EAAgBO,CAAE,MAEhD,OAAM,IAAI,UAAWN,EAAQ,mHAAoHM,CAAE,CAAE,EAEtJ,GAAKD,EAAE,SAAWC,EAAE,OACnB,MAAM,IAAI,WAAYN,EAAQ,+GAAgHK,EAAE,OAAQC,EAAE,MAAO,CAAE,EAEpK,OAAKM,GAAQE,EACPP,GAAUE,GACdR,EAAOI,EAAE,OAAQA,EAAE,KAAMA,EAAE,QAAS,CAAE,EAAGA,EAAE,OAAQC,EAAE,KAAMA,EAAE,QAAS,CAAE,EAAGA,EAAE,MAAO,EAC7EA,GAEHE,GAAUE,GACdR,EAAOG,EAAE,OAAQA,EAAE,KAAMA,EAAE,QAAS,CAAE,EAAGA,EAAE,OAAQC,EAAE,KAAMA,EAAE,QAAS,CAAE,EAAGA,EAAE,MAAO,EAC7EA,IAERH,EAAME,EAAE,OAAQA,EAAE,KAAMA,EAAE,QAAS,CAAE,EAAGA,EAAE,OAAQC,EAAE,KAAMA,EAAE,QAAS,CAAE,EAAGA,EAAE,MAAO,EAC5EA,GAEHM,GACJT,EAAME,EAAE,OAAQA,EAAE,KAAMA,EAAE,QAAS,CAAE,EAAGA,EAAE,OAAQC,EAAG,EAAG,CAAE,EACnDA,GAEHQ,GACJX,EAAME,EAAE,OAAQA,EAAG,EAAG,EAAGC,EAAE,KAAMA,EAAE,QAAS,CAAE,EAAGA,EAAE,MAAO,EACnDA,IAERH,EAAME,EAAE,OAAQA,EAAG,EAAG,EAAGC,EAAG,EAAG,CAAE,EAC1BA,EACR,CAKAX,EAAO,QAAUS,IChFjB,IAAIW,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "isndarrayLike", "isCollection", "isFloat64Array", "isFloat32Array", "format", "dswap", "sswap", "swap", "gswap", "x", "y", "isxf64", "isxf32", "isyf64", "isyf32", "isxa", "isxv", "isya", "isyv", "main"]
}
